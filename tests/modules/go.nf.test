nextflow_process {

    name "Test Process GO"
    script "modules/local/go.nf"
    process "GO"

    test("Should run without failures") {

        when {
            params {
                // define parameters here. Example:
                clean = false
            }
            process {
                """
                // define inputs of the process here. Example:
                Channel.fromPath("${projectDir}/data/go_input/hash_files").set{ hash_ch }
                Channel.of(file("${projectDir}/data/go_input/Drosophila_yakuba.SpeciesScoreSummary.txt")).set{ score_summary_ch }
                Channel.of("10").set{ cutoff_ch }
                input[0] = hash_ch.combine(score_summary_ch.combine(cutoff_ch))
                Channel.fromPath( "${projectDir}/data/go_input/Drosophila_yakuba.bed").set{ bed_ch }
                input[1] = Channel.fromPath("${projectDir}/data/synteny_input/*.bed").collect().combine(bed_ch)
                """
            }
        }

        then {
            //check if test case succeeded
            assert process.success
            //analyze trace file
            assert process.trace.tasks().size() == 1
            with(process.out) {
              //checks one tuple exists in go_table channel
              assert go_table.size() == 1
              //checks six files exist in go_table tuple
              assert go_table.size() == 6
              //check file corruption
              assert path(go_table[0].get(0)).md5 == '7b5c1257d7d277c55b4b682aa3695a0f'
              assert path(go_table[0].get(1)).md5 == 'd7e2dad0fcff3fc0061d4c51d03bc2fb'
            }
        }
    }
}
